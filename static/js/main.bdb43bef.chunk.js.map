{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","qw","setqw","pos","setPos","neg","setNeg","iPlay","img","setImg","useEffect","console","log","audio","Audio","localeCompare","setInterval","play","clearInterval","localStorage","getItem","parseInt","setItem","className","onClick","prevPos","src","prevNeg","prevImg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LA2FeA,MAxFf,WAAgB,IAAD,EACOC,mBAAS,MADhB,mBACNC,EADM,KACFC,EADE,OAGSF,mBAAS,GAHlB,mBAGNG,EAHM,KAGDC,EAHC,OAISJ,mBAAS,GAJlB,mBAINK,EAJM,KAIDC,EAJC,KAMPC,EAAQ,WAND,EASSP,mBAASO,GATlB,mBASNC,EATM,KASDC,EATC,KAoEb,OAzDAC,qBAAU,WACRC,QAAQC,IAAI,YACZ,IAAIC,EAAQ,IAAIC,MAAM,YAClBN,EAAIO,cAAcR,GACpBL,EAAMc,aAAY,WAChBH,EAAMI,SACL,MAGHC,cAAcjB,KAEhB,CAACO,IAEHE,qBAAU,WACLS,aAAaC,QAAQ,QACtBhB,EAAOiB,SAASF,aAAaC,QAAQ,SAEnCD,aAAaC,QAAQ,QACvBd,EAAOe,SAASF,aAAaC,QAAQ,WAEtC,IAEHV,qBAAU,WACRS,aAAaG,QAAQ,MAAOD,SAASlB,IACrCgB,aAAaG,QAAQ,MAAOD,SAAShB,MACpC,CAACF,EAAKE,IAiCP,sBAAKkB,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAMC,QArBN,WACjBb,QAAQC,IAAI,MAEZR,GAAO,SAACqB,GAAD,OAAWA,EAAQ,MAkBxB,UACE,qBAAKF,UAAU,OAAf,SAAuBpB,IACvB,qBAAKoB,UAAU,MAAf,SAAsBF,SAAgB,IAANlB,GAAgBA,EAAME,IAAQ,MAC9D,qBAAKqB,IAAI,YAAYH,UAAU,UAAUC,QAlB5B,WACjBb,QAAQC,IAAI,MACZR,GAAO,SAACqB,GAAD,OAAaA,EAAU,WAkB5B,sBAAKF,UAAU,MAAMC,QAXN,WACjBlB,GAAO,SAACqB,GAAD,OAAaA,EAAU,MAU5B,UACE,qBAAKJ,UAAU,OAAf,SAAuBlB,IACvB,qBAAKqB,IAAI,aAAaH,UAAU,UAAUC,QAjB7B,WACjBlB,GAAO,SAACqB,GAAD,OAAaA,EAAU,WAkB5B,qBAAKJ,UAAU,KAAf,SAEE,qBAAKG,IAAKlB,EAAKe,UAAU,MAAMC,QA3CxB,WACXf,GAAO,SAACmB,GACN,OAAKA,EAAQb,cAAcR,GAIlBA,EArCE,wBCEFsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bdb43bef.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './App.css';\n\nfunction App() {\n  const [qw, setqw] = useState(null)\n\n  const [pos, setPos] = useState(0)\n  const [neg, setNeg] = useState(0)\n\n  const iPlay = \"play.png\";\n  const iPause = \"pause.jpg\";\n\n  const [img, setImg] = useState(iPlay)\n\n  useEffect(() => {\n    console.log(\"called!!\")\n    let audio = new Audio(\"beep.mp3\");\n    if (img.localeCompare(iPlay)) {\n      setqw(setInterval(() => {\n        audio.play();\n      }, 60000))\n    }\n    else {\n      clearInterval(qw);\n    }\n  },[img])\n\n  useEffect(() => {\n    if(localStorage.getItem('pos')){\n      setPos(parseInt(localStorage.getItem('pos')))\n    }\n    if (localStorage.getItem('neg')) {\n      setNeg(parseInt(localStorage.getItem('neg')))\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('pos', parseInt(pos));\n    localStorage.setItem('neg', parseInt(neg));\n  }, [pos, neg])\n\n  let toggle = ()=>{\n    setImg((prevImg)=>{\n      if (!prevImg.localeCompare(iPlay)){\n        return iPause;\n      }\n      else{\n        return iPlay;\n      }\n    })\n  }\n  \n  let incrementPos = ()=>{\n    console.log(\"ip\");\n\n    setPos((prevPos)=>prevPos+1);\n  }\n\n  let decrementPos = () => {\n    console.log(\"dp\");\n    setPos((prevPos) => prevPos - 2);\n  }\n\n  let incrementNeg = () => {\n    setNeg((prevNeg) => prevNeg + 4);\n  }\n\n  let decrementNeg = () => {\n    setNeg((prevNeg) => prevNeg - 2);\n  }\n  \n  return (\n    <div className=\"App\">\n      <div className=\"pos\" onClick={incrementPos}>\n        <div className=\"npos\">{pos}</div>\n        <div className=\"per\">{parseInt((pos * 10000) / (pos - neg)) / 100}</div>\n        <img src=\"black.jpg\" className=\"antipos\" onClick={decrementPos} />\n      </div>\n      <div className=\"neg\" onClick={decrementNeg}>\n        <div className=\"nval\">{neg}</div>\n        <img src=\"white.jpeg\" className=\"antineg\" onClick={incrementNeg} />\n      </div>\n      <div className=\"pp\">\n        {/* <img src=\"black.jpg\" className=\"antipos\" onClick={decrementPos} /> */}\n        <img src={img} className=\"img\" onClick={toggle} />\n        {/* <img src=\"white.jpeg\" className=\"antineg\" onClick={incrementNeg} /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}